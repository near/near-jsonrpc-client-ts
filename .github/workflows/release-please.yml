name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-upload:
    needs: release-please
    # if: ${{ needs.release-please.outputs.releases_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm build
      - run: |
          pnpm pack --pack-destination . -C packages/jsonrpc-types
          pnpm pack --pack-destination . -C packages/jsonrpc-client
      - name: Debug - List files
        run: |
          echo "Files in root directory:"
          ls -la *.tgz || echo "No .tgz files in root"
          echo "Files in packages/jsonrpc-types:"
          ls -la packages/jsonrpc-types/*.tgz || echo "No .tgz files in packages/jsonrpc-types"
          echo "Files in packages/jsonrpc-client:"
          ls -la packages/jsonrpc-client/*.tgz || echo "No .tgz files in packages/jsonrpc-client"
          echo "All .tgz files in project:"
          find . -name "*.tgz" -type f
      - name: Upload package tarballs to release
        run: |
          for tarball in near-js-*.tgz; do
            if [ -f "$tarball" ]; then
              echo "Uploading $tarball"
              gh release upload ${{ github.ref_name }} "$tarball"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
